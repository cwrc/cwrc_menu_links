<?php
/**
 * @file
 * Code for the CWRC: menu links feature.
 */

include_once 'cwrc_menu_links.features.inc';

/**
 * Implements hook_menu_alter().
 *
 * This is our current menu alter "kludge" that completely removes/restructures
 * menu items as needed for our UI.
 */
function cwrc_menu_links_menu_alter(&$items) {
  $items['islandora/object/%islandora_object/plotit']['access callback'] = false;

  // User page menu items
  $items['user/%user/devel']['type'] = MENU_CALLBACK;
  $items['user/%user/connected-accounts']['type'] = MENU_CALLBACK;
  $items['user/%user/openid-sites']['type'] = MENU_CALLBACK;
  $items['user/%user/islandora-saved-searches']['type'] = MENU_CALLBACK;
  $items['user/%user/imce']['type'] = MENU_CALLBACK;
  $items['user/%user/shortcuts']['type'] = MENU_CALLBACK;

  // Project dashboard menu items
  $items['node/%/group']['type'] = MENU_CALLBACK;
  $items['node/%node/node_export']['type'] = MENU_CALLBACK;
  $items['node/%node/revisions']['type'] = MENU_CALLBACK;
  $items['node/%node/devel']['type'] = MENU_CALLBACK;
}

function cwrc_menu_links_theme($existing, $tpe, $theme, $path) {
  return array(
    'cwrc_menu_links_login_block' => array(
      'template' => 'templates/cwrc-menu-links-login-block',
      'variables' => array('owned' => array(), 'shared' => array()),
    ),
  );
}

function cwrc_menu_links_block_info() {
  $blocks = array();
  $blocks['login_link'] = array(
    'info' => t('CWRC Login Link Block'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

function cwrc_menu_links_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case 'login_link':
      $block['subject'] = t('Login');
      $block['content'] = l(t('Login/Join'), 'user');
      break;
  }
  return $block;
}

function cwrc_menu_links_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  global $theme;

  // Only works with our theme.
  if ($theme == 'de_theme') {
    if (count($data['tabs']) == 0) return;

    $already_processed = &drupal_static(__FUNCTION__ . ':' . $router_item['href']);
    if (isset($already_processed) && $already_processed) {
      return;
    }
    $already_processed = TRUE;

    foreach ($data['tabs'][0]['output'] as $tabkey => &$tab) {
      $new_href = $tab['#link']['href'];

      // If it already has a submenu, don't bother
      if (array_key_exists('submenu', $tab)) continue;

      // Set the parent item as active if it is
      if ($new_href == $router_item['tab_parent_href'] || $new_href == $router_item['href']) {
        $data['tabs'][0]['output'][$tabkey]['#active'] = TRUE;
      }

      $new_router_item = menu_get_item($new_href);
      $new_tabs = _cwrc_menu_links_get_submenu_items($new_router_item);
      menu_local_tasks(); // Re-check the current item because we destroyed the cache

      if ($new_tabs['tabs']['count'] > 1) {
        $submenu = array();
        foreach ($new_tabs['tabs']['output'] as $newtabkey => $newtab) {
          $submenu[$newtabkey] = l(t($newtab['#link']['title']), $newtab['#link']['href']);
        }

        $data['tabs'][0]['output'][$tabkey]['submenu'] = $submenu;
      }
    }
  }
}

function _cwrc_menu_links_get_submenu_items($router_item) {
  $local_tasks = &drupal_static(__FUNCTION__ . ':' . $router_item['href']);
  if (isset($local_tasks)) {
    return $local_tasks;
  }

  $current_page = menu_get_item();
  $current_page = $current_page['href'];

  menu_set_active_item($router_item['href']);

  // We need to reset because we've faked the current page
  drupal_static_reset('menu_local_tasks');

  $local_tasks = menu_local_tasks(1);

  // We need to do this _again_ for the current page
  drupal_static_reset('menu_local_tasks');

  menu_set_active_item($current_page);

  return $local_tasks;
}
